{"ast":null,"code":"import MD5 from \"crypto-js/md5\";\n\nconst getHash = (ts, privateKey, publicKey) => {\n  return MD5(ts + privateKey + publicKey).toString();\n};\n\nlet API_URL = process.env.REACT_APP_BASIC_URL;\n\nconst fetchHeros = async name => {\n  let heroUrl = `${API_URL}/v1/public/characters`;\n  let ts = Date.now().toString();\n  let apiKey = process.env.REACT_APP_API_KEY;\n  let privateKey = process.env.REACT_APP_PRIVATE_KEY;\n  let hash = getHash(ts, privateKey, apiKey);\n  let url = `${heroUrl}?ts=${ts}&apikey=${apiKey}&hash=${hash}&nameStartsWith=${name}`;\n\n  try {\n    let response = await fetch(url);\n    let data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n};\n\nconst fetchHero = async id => {\n  let heroUrl = `${API_URL}/v1/public/characters/${id}`;\n  let ts = Date.now().toString();\n  let apiKey = process.env.REACT_APP_API_KEY;\n  let privateKey = process.env.REACT_APP_PRIVATE_KEY;\n  let hash = getHash(ts, privateKey, apiKey);\n  let url = `${heroUrl}?ts=${ts}&apikey=${apiKey}&hash=${hash}`;\n\n  try {\n    let response = await fetch(url);\n    let data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n};\n\nexport { fetchHeros, fetchHero };","map":{"version":3,"sources":["C:/Users/Alibayev Assylbek/Desktop/final-exam/src/libs/utils.js"],"names":["MD5","getHash","ts","privateKey","publicKey","toString","API_URL","process","env","REACT_APP_BASIC_URL","fetchHeros","name","heroUrl","Date","now","apiKey","REACT_APP_API_KEY","REACT_APP_PRIVATE_KEY","hash","url","response","fetch","data","json","console","log","err","error","fetchHero","id"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,UAAL,EAAiBC,SAAjB,KAA+B;AAC7C,SAAOJ,GAAG,CAACE,EAAE,GAAGC,UAAL,GAAkBC,SAAnB,CAAH,CAAiCC,QAAjC,EAAP;AACD,CAFD;;AAIA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,MAAIC,OAAO,GAAI,GAAEN,OAAQ,uBAAzB;AAEA,MAAIJ,EAAE,GAAGW,IAAI,CAACC,GAAL,GAAWT,QAAX,EAAT;AACA,MAAIU,MAAM,GAAGR,OAAO,CAACC,GAAR,CAAYQ,iBAAzB;AACA,MAAIb,UAAU,GAAGI,OAAO,CAACC,GAAR,CAAYS,qBAA7B;AACA,MAAIC,IAAI,GAAGjB,OAAO,CAACC,EAAD,EAAKC,UAAL,EAAiBY,MAAjB,CAAlB;AACA,MAAII,GAAG,GAAI,GAAEP,OAAQ,OAAMV,EAAG,WAAUa,MAAO,SAAQG,IAAK,mBAAkBP,IAAK,EAAnF;;AAEA,MAAI;AACF,QAAIS,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,QAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACD,GALD,CAKE,OAAOI,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACA;AACD;AACF,CAlBD;;AAoBA,MAAME,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC9B,MAAIjB,OAAO,GAAI,GAAEN,OAAQ,yBAAwBuB,EAAG,EAApD;AAEA,MAAI3B,EAAE,GAAGW,IAAI,CAACC,GAAL,GAAWT,QAAX,EAAT;AACA,MAAIU,MAAM,GAAGR,OAAO,CAACC,GAAR,CAAYQ,iBAAzB;AACA,MAAIb,UAAU,GAAGI,OAAO,CAACC,GAAR,CAAYS,qBAA7B;AACA,MAAIC,IAAI,GAAGjB,OAAO,CAACC,EAAD,EAAKC,UAAL,EAAiBY,MAAjB,CAAlB;AACA,MAAII,GAAG,GAAI,GAAEP,OAAQ,OAAMV,EAAG,WAAUa,MAAO,SAAQG,IAAK,EAA5D;;AAEA,MAAI;AACF,QAAIE,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,QAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACD,GALD,CAKE,OAAOI,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACA;AACD;AACF,CAlBD;;AAoBA,SAAShB,UAAT,EAAqBkB,SAArB","sourcesContent":["import MD5 from \"crypto-js/md5\";\r\n\r\nconst getHash = (ts, privateKey, publicKey) => {\r\n  return MD5(ts + privateKey + publicKey).toString();\r\n};\r\n\r\nlet API_URL = process.env.REACT_APP_BASIC_URL;\r\n\r\nconst fetchHeros = async (name) => {\r\n  let heroUrl = `${API_URL}/v1/public/characters`;\r\n\r\n  let ts = Date.now().toString();\r\n  let apiKey = process.env.REACT_APP_API_KEY;\r\n  let privateKey = process.env.REACT_APP_PRIVATE_KEY;\r\n  let hash = getHash(ts, privateKey, apiKey);\r\n  let url = `${heroUrl}?ts=${ts}&apikey=${apiKey}&hash=${hash}&nameStartsWith=${name}`;\r\n\r\n  try {\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n};\r\n\r\nconst fetchHero = async (id) => {\r\n  let heroUrl = `${API_URL}/v1/public/characters/${id}`;\r\n\r\n  let ts = Date.now().toString();\r\n  let apiKey = process.env.REACT_APP_API_KEY;\r\n  let privateKey = process.env.REACT_APP_PRIVATE_KEY;\r\n  let hash = getHash(ts, privateKey, apiKey);\r\n  let url = `${heroUrl}?ts=${ts}&apikey=${apiKey}&hash=${hash}`;\r\n\r\n  try {\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n};\r\n\r\nexport { fetchHeros, fetchHero };\r\n"]},"metadata":{},"sourceType":"module"}